apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'

defaultTasks 'clean', 'cleanEclipse', 'eclipse', 'mergeSaiku', 'downloadMondrian' //, 'war'

/*
 * Version configuration
 */
// Java Version
sourceCompatibility = 1.8

// Saiku Version
ext.saikuReleaseTag = 'tag-3.16'

// Mondrian Version
ext.mondrianReleaseTag = '8.2.0.1-R'
ext.mondrianVersion = '8.2.0.1-410'


/*
 * Automatically download Saiku and Mondrian (optional)
 */
task downloadSaiku(type: Exec) {
    onlyIf { !file('saiku').exists() }
    commandLine 'git', 'clone', 'https://github.com/OSBI/saiku.git', '--single-branch', '-b', "$saikuReleaseTag", 'saiku'
}

task downloadSaikuQuery(type: Exec) {
    onlyIf { !file('saiku-query').exists() }
    commandLine 'git', 'clone', 'https://github.com/OSBI/saiku-query.git', 'saiku-query'
}


task downloadMondrian(type: Exec) {
    onlyIf { !file('mondrian').exists() }
    commandLine 'git', 'clone', 'https://github.com/pentaho/mondrian.git', '--single-branch', '-b', "$mondrianReleaseTag", 'mondrian'
}


/**
 * Copy relevant parts of the Saiku source code to a temporary directory
 */
task mergeSaiku(dependsOn: [downloadSaiku, downloadSaikuQuery]) {

    outputs.upToDateWhen { false }
    doLast {
        // cleanup tmp folder
        delete 'tmp'

        // include saiku java sources
        copy {
            from 'saiku-query/src'
            from 'saiku/saiku-core/saiku-olap-util/src'
            from 'saiku/saiku-core/saiku-service/src'
            from 'saiku/saiku-core/saiku-web/src'
            into 'tmp'
        }

        // exclude patched files
        delete 'tmp/main/java/mondrian/olap4j/SaikuMondrianHelper.java'
        delete 'tmp/main/java/mondrian/rolap/DimensionLookup.java'

        // delete non-needed files
        delete 'tmp/main/java/org/saiku/olap/util/SaikuDefaultXmlaServlet.java'
        delete 'tmp/main/java/org/saiku/olap/util/SaikuXmlaServlet.java'
        delete 'tmp/main/java/org/saiku/license/LicenseUtils.java'
        delete 'tmp/main/java/org/saiku/service/license/LicenseManager.java'
        delete 'tmp/test'
        delete 'tmp/oldtest'

        // include saiku web app files
        copy {
            from 'saiku/saiku-webapp/src/main/webapp/WEB-INF'
            into 'tmp/main/webapp/WEB-INF'
        }

        // include own web app files
        copy {
            from 'src/main/webapp'
            into 'tmp/main/webapp'
        }

        // include static files
        copy {
            from 'saiku/saiku-ui'
            into 'tmp/main/webapp'
        }
    }
}
compileJava.dependsOn mergeSaiku


/**
 * Define the repository locations to use.
 */
repositories {
    mavenCentral()
    maven {
        url 'http://nexus.pentaho.org/content/groups/omni'
    }
    maven {
        url 'http://clojars.org/repo/'
    }
    maven {
        url 'http://nexus.qmino.com/content/repositories/miredot/'
    }
}


/**
 * Define the source directories to compile
 */
sourceSets {
    main {
        java {
            srcDir 'tmp/main/java'
            srcDir 'src/main/java'
        }

        resources {
            srcDir 'src/main/resources'
            srcDir 'tmp/main/resources'
        }
    }
}


/**
 * Dependencies to external jars. These are the merged dependencies from the
 * Mondrian and Saiku pom.xml files.
 */
dependencies {

    // Mondrian
    compile "pentaho:mondrian:$mondrianVersion"

    // Saiku dependencies
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.5.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.1'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.5.1'
    compile 'com.google.guava:guava:23.0'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile 'com.h2database:h2:1.4.188'
    compile 'com.lowagie:itext:4.2.0'
    compile 'com.marklogic:marklogic-xcc:9.0.7'
    compile 'com.qmino:miredot-annotations:1.3.1'
    compile 'com.sun.jersey.contribs:jersey-multipart:1.19'
    compile 'com.sun.jersey.contribs:jersey-spring:1.19'
    compile 'com.sun.jersey:jersey-server:1.19'
    compile 'com.sun.jersey:jersey-servlet:1.19'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-lang:commons-lang:2.4'
    compile 'commons-vfs:commons-vfs:1.0'
    compile 'javax.jcr:jcr:2.0'
    compile 'javax.ws.rs:jsr311-api:1.1.1'
    compile 'net.sourceforge.htmlcleaner:htmlcleaner:2.10'
    compile 'org.apache.commons:commons-lang3:3.3.2'
    compile 'org.apache.felix:org.osgi.core:1.0.0'
    compile 'org.apache.httpcomponents:fluent-hc:4.5.6'
    compile 'org.apache.jackrabbit:jackrabbit-api:2.18.0'
    compile 'org.apache.jackrabbit:jackrabbit-core:2.18.0'
    compile 'org.apache.jackrabbit:jackrabbit-jcr-commons:2.18.0'
    compile 'org.apache.jackrabbit:jackrabbit-jcr-server:2.18.0'
    compile 'org.apache.poi:poi-ooxml:3.7'
    compile 'org.apache.poi:poi:3.7'
    compile 'org.apache.xmlgraphics:fop:2.2'
    compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
    compile 'org.hibernate:hibernate-core:4.3.5.Final'
    compile 'org.jasig.cas.client:cas-client-core:3.3.2'
    compile 'org.jdom:jdom:1.1'
    compile 'org.jetbrains:annotations:16.0.3'
    compile 'org.mozilla:rhino:1.7R5'
    compile 'org.slf4j:jul-to-slf4j:1.7.25'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'org.slf4j:slf4j-log4j12:1.7.25'
    compile 'org.springframework.security:spring-security-cas:4.0.1.RELEASE'
    compile 'org.springframework.security:spring-security-config:4.0.1.RELEASE'
    compile 'org.springframework.security:spring-security-core:4.0.1.RELEASE'
    compile 'org.springframework.security:spring-security-web:4.0.1.RELEASE'
    compile 'org.springframework:spring-beans:4.1.6.RELEASE'
    compile 'org.springframework:spring-core:4.1.6.RELEASE'
    compile 'org.springframework:spring-jdbc:4.1.6.RELEASE'
    compile 'org.springframework:spring-tx:4.1.6.RELEASE'
    compile 'org.springframework:spring-web:4.1.6.RELEASE'


    // database drivers
    compile 'org.postgresql:postgresql:42.2.5'
    compile 'monetdb:monetdb-jdbc:11.19.15'

    providedCompile 'javax.servlet:jsp-api:2.0'
    providedCompile 'javax.servlet:servlet-api:2.4'
}
configurations.all {
    exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
}


/**
 * Manifest for the war file
 */
war {
    archiveName 'monsai.war'
    destinationDir file('.')
    from 'tmp/main/webapp'

    outputs.upToDateWhen { false }
}


/**
 * Configure additional eclipse properties
 */
eclipse {
    classpath {
        downloadSources = true
        file.withXml {
            it.asNode().each {
                if (it.@kind == 'src' && !it.@path.startsWith('src')) {
                    it.appendNode('attributes').appendNode('attribute', [name: 'ignore_optional_problems', value: 'true'])
                }
            }
        }
    }
    wtp {
        component {
            contextPath '/'
            resource sourcePath: 'tmp/main/webapp', deployPath: '/'
        }
    }
}

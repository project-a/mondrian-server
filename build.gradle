apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

defaultTasks 'clean', 'cleanEclipse', 'eclipse', 'mergeSources', 'war'

// compiler arguments
tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xlint:deprecation']
    //options.compilerArgs += ['-Xlint:unchecked']
}
/*
 * Version configuration
 */
// Java Version
sourceCompatibility = 1.8
//sourceCompatibility = 11

// Saiku Version
//ext.saikuReleaseTag = 'tag-3.16'
ext.saikuReleaseTag = '3.16m'

// Mondrian Version
ext.mondrianReleaseTag = '9.5.0.0'
ext.mondrianVersion = '9.5.0.0-SNAPSHOT'

// Spring Versiion
ext.springFrameworkVersion = '4.1.6.RELEASE' //'4.3.30.RELEASE'
ext.springFrameworkVersionSecurity = '4.0.1.RELEASE'// '4.2.20.RELEASE'


/*
 * Automatically download Saiku and Mondrian (optional)
 */
task downloadSaiku(type: Exec) {
    onlyIf { !file('saiku').exists() }
    //commandLine 'git', 'clone', 'https://github.com/OSBI/saiku.git', '--single-branch', '-b', "$saikuReleaseTag", 'saiku'
    commandLine 'git', 'clone', 'https://github.com/ladida28/saiku.git', '--single-branch', '-b', "$saikuReleaseTag", 'saiku'
}

task pullSaiku(type: Exec) {
	description 'Pull saiku git'
	commandLine 'git', 'pull'
	workingDir = './saiku'
}

task downloadSaikuQuery(type: Exec) {
    onlyIf { !file('saiku-query').exists() }
    commandLine 'git', 'clone', 'https://github.com/OSBI/saiku-query.git', 'saiku-query'
}


task downloadMondrian(type: Exec) {
    onlyIf { !file('mondrian').exists() }
    commandLine 'git', 'clone', 'https://github.com/pentaho/mondrian.git', '--single-branch', '-b', "$mondrianReleaseTag", 'mondrian'
}


/**
 * Copy relevant parts of the Saiku source code to a temporary directory
 */
task mergeSources(dependsOn: [downloadSaiku, pullSaiku, downloadSaikuQuery]) {

    outputs.upToDateWhen { false }
    doLast {
        // cleanup tmp folder
        delete 'tmp'

        // include saiku java sources
        copy {
            duplicatesStrategy = DuplicatesStrategy.EXCLUDE
            from 'saiku-query/src'
            from 'saiku/saiku-core/saiku-olap-util/src'
            from 'saiku/saiku-core/saiku-service/src'
            from 'saiku/saiku-core/saiku-web/src'
            into 'tmp'
        }

        // exclude patched files
        delete 'tmp/main/java/mondrian/olap4j/SaikuMondrianHelper.java'
        delete 'tmp/main/java/mondrian/rolap/DimensionLookup.java'

        // delete non-needed files
        delete 'tmp/main/java/org/saiku/olap/util/SaikuDefaultXmlaServlet.java'
        delete 'tmp/main/java/org/saiku/olap/util/SaikuXmlaServlet.java'
        delete 'tmp/main/java/org/saiku/license/LicenseUtils.java'
        delete 'tmp/main/java/org/saiku/service/license/LicenseManager.java'
        delete 'tmp/test'
        delete 'tmp/oldtest'

        // include saiku web app files
        copy {
            from 'saiku/saiku-webapp/src/main/webapp/WEB-INF'
            into 'tmp/main/webapp/WEB-INF'
        }

        // include static files
        copy {
            from 'saiku/saiku-ui'
            into 'tmp/main/webapp'
        }

        // include own web app files
        copy {
            from 'src/main/webapp'
            into 'tmp/main/webapp'
        }

        delete 'tmp/main/webapp/js/saiku/plugins/I18n/po'
    }
}
compileJava.dependsOn mergeSources

/**
 * Define the repository locations to use.
 */
repositories {
    mavenCentral()
    maven {
        url 'https://repo.orl.eng.hitachivantara.com/artifactory/pnt-mvn/' //'https://nexus.pentaho.org/content/groups/omni'
    }
    maven {
        url 'https://clojars.org/repo/'
    }
    maven {
        url 'http://nexus.qmino.com/content/repositories/miredot/'
        allowInsecureProtocol = true
    }
    /*maven {
        url 'https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc8'
    }*/
}


/**
 * Define the source directories to compile
 */
sourceSets {
    main {
        java {
            srcDir 'tmp/main/java'
            srcDir 'src/main/java'
        }

        resources {
            srcDir 'src/main/resources'
            srcDir 'tmp/main/resources'
        }
    }
}


/**
 * Dependencies to external jars. These are the merged dependencies from the
 * Mondrian and Saiku pom.xml files.
 */
dependencies {

    // Mondrian
    implementation "pentaho:mondrian:${mondrianVersion}"

    // Saiku dependencies
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.7'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.7.1'
    implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.12.7'
    implementation 'com.google.guava:guava:23.0'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'com.h2database:h2:1.4.188'
    //implementation 'com.lowagie:itext:4.2.1@jar'
	implementation 'com.itextpdf:itextpdf:5.0.6'
    implementation 'com.marklogic:marklogic-xcc:9.0.7'
    implementation 'com.qmino:miredot-annotations:1.3.1'
    implementation 'com.sun.jersey.contribs:jersey-multipart:1.19'
    implementation 'com.sun.jersey.contribs:jersey-spring:1.19'
    implementation 'com.sun.jersey:jersey-server:1.19'
    implementation 'com.sun.jersey:jersey-servlet:1.19'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'commons-lang:commons-lang:2.4'
    //implementation 'commons-vfs:commons-vfs:1.0'
	implementation 'org.apache.commons:commons-vfs2:2.7.0'
    implementation 'javax.jcr:jcr:2.0'
    implementation 'javax.ws.rs:jsr311-api:1.1.1'
    implementation 'net.sourceforge.htmlcleaner:htmlcleaner:2.10'
    implementation 'org.apache.commons:commons-lang3:3.3.2'
    implementation 'org.apache.felix:org.osgi.core:1.0.0'
    implementation 'org.apache.httpcomponents:fluent-hc:4.5.14'
    implementation 'org.apache.jackrabbit:jackrabbit-api:2.18.0'
    implementation 'org.apache.jackrabbit:jackrabbit-core:2.18.0'
    implementation 'org.apache.jackrabbit:jackrabbit-jcr-commons:2.18.0'
    implementation 'org.apache.jackrabbit:jackrabbit-jcr-server:2.18.0'
    implementation 'org.apache.poi:poi-ooxml:5.1.0'
    implementation 'org.apache.poi:poi:5.1.0'
    implementation 'org.apache.xmlgraphics:fop:2.4'
    implementation 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
    implementation 'org.hibernate:hibernate-core:5.3.29.Final'//4.3.5.Final'
    implementation 'org.jasig.cas.client:cas-client-core:3.3.3'
    implementation 'org.jdom:jdom:1.1'
    implementation 'org.jetbrains:annotations:16.0.3'
    implementation 'org.mozilla:rhino:1.7R5'

    	// bridge for old logging
    //implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.slf4j:slf4j-api:2.0.7'
	//implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.1'
    //implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    //implementation 'org.slf4j:slf4j-reload4j:2.0.7'
    //implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    //implementation 'org.slf4j:jul-to-slf4j:1.7.25'
    //implementation 'org.slf4j:slf4j-api:1.7.25'
    //implementation 'org.slf4j:slf4j-log4j12:1.7.25'
	//implementation 'org.slf4j:slf4j-log4j12:1.7.36'
    //implementation 'org.slf4j:slf4j-reload4j:1.7.36'
    implementation 'org.slf4j:slf4j-reload4j:2.0.7'



    implementation "org.springframework.security:spring-security-cas:$springFrameworkVersionSecurity"//4.0.1.RELEASE'
    implementation "org.springframework.security:spring-security-config:$springFrameworkVersionSecurity"//4.0.1.RELEASE'4.0.1.RELEASE'
    implementation "org.springframework.security:spring-security-core:$springFrameworkVersionSecurity"//4.0.1.RELEASE'4.0.1.RELEASE'
    implementation "org.springframework.security:spring-security-web:$springFrameworkVersionSecurity"//4.0.1.RELEASE'4.0.1.RELEASE'
    implementation "org.springframework:spring-beans:$springFrameworkVersion"//4.1.6.RELEASE'
    implementation "org.springframework:spring-core:$springFrameworkVersion"//4.1.6.RELEASE'
    implementation "org.springframework:spring-jdbc:$springFrameworkVersion"//4.1.6.RELEASE'
    implementation "org.springframework:spring-tx:$springFrameworkVersion"//4.1.6.RELEASE'
    implementation "org.springframework:spring-web:$springFrameworkVersion"//4.1.6.RELEASE'
    implementation "org.springframework:spring-webmvc:$springFrameworkVersion"//4.1.6.RELEASE'
    //implementation 'xml-apis:xml-apis:1.0.b2'
    implementation 'xml-apis:xml-apis:1.4.01'

    implementation 'org.apache.avalon.framework:avalon-framework-api:4.3.1'
    implementation 'org.apache.avalon.framework:avalon-framework-impl:4.3.1'

    implementation "com.sun.xml.bind:jaxb-core:2.3.0.1"
    implementation "javax.xml.bind:jaxb-api:2.3.1"
    implementation "com.sun.xml.bind:jaxb-impl:2.3.1"

    implementation "javax.annotation:javax.annotation-api:1.3.2"

    implementation 'org.postgresql:postgresql:42.2.27'

    compileOnly 'javax.servlet:jsp-api:2.0'
    compileOnly 'javax.servlet:servlet-api:2.4'

    //implementation group: 'com.oracle.database.jdbc', name: 'ojdbc8', version: '21.5.0.0'
    implementation group: 'com.oracle.database.jdbc', name: 'ojdbc8', version: '19.14.0.0'
}
configurations.all {
    exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
}


/**
 * Build the jar file
 */
war {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveFileName = 'mondrian-server.war'
    destinationDirectory = file('.')
    from 'tmp/main/webapp'

    outputs.upToDateWhen { false }
}


/**
 * Configure additional eclipse properties
 */
eclipse {
    classpath {
        downloadSources = true
        file {
            whenMerged {
                def source = entries.find { it.path == 'tmp/main/java' }
                if (source) {
                    source.entryAttributes['ignore_optional_problems'] = 'true'
                }
            }
        }
    }
    wtp {
        component {
            contextPath '/'
            resource sourcePath: 'tmp/main/webapp', deployPath: '/'
            libConfigurations += [configurations.runtimeClasspath]
        }
    }
}
